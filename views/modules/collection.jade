//- TODO: map each column and provide summary in footer
table.ui.table.segment.sortable
  thead
    tr
      td
        input(type="checkbox")
      each field in viewFields
        td #{field}
      td

  tbody
    each item in collection
      tr(data-model="#{resource.name}", data-id="#{item[ idField ]}")
        td
          input(type="checkbox")
        each field in viewFields
          - var f = resource.attributes[ field ]
          td
            if (field == idField || field == nameField)
              a(href="/#{resource.collection}/#{item[ idField ]}") #{item[ nameField ]}
            else if (f && f._type === 'lookup' && f._ref)
              a(href="/#{ resources[ f._ref ].collection }/#{ item.slug }") #{ item[ field ] }
            else if (f && f._type === 'file')
              a(href="/files/#{item[ field ]}") #{item[ field ]}
            else
              //- TODO: handle this much higher in the stack
              if (f && f.render === 'markdown')
                | !{ markdown( item[ field ] ) }
              else
                | #{item[ field ]}
        td
          i.link.icon.remove(data-action="remove-item")

  tfoot
    tr
      td
        if (pageInfo)
            div.ui.pagination.menu
                - var i = 0
                while i < pageInfo.pageCount
                    a.active.item(href="/#{resource.plural.toLowerCase()}?page=#{i}")= i++
        else
            td #{collection.length} items
      
script.
  $(window).load(function() {
    $('*[data-action=remove-item]').click(function( e ) {
      e.preventDefault();
      
      // TODO: only remove item when socket event received!
      var $item = $( this ).parent().parent();
      $.ajax({ method: 'delete', url: '/#{resource.collection}/' + $item.data('id') , success: function(data) {
        $item.slideUp('slow', function() {
          $item.remove();
        });
      } });
      return false;
    })
  });
